#!/bin/bash

main ()
{
    #setup || return 1
    setvar
    dchdecal
    fetch
    cleanup
}

setup ()
{
    [[ $(tput cols) -lt 78 ]] && echo "Not enough space. (Minimum 78 columns.)" && return 1
}

dchdecal ()
{
    echo -e $'                                                                              '
    echo -e $'\e[0;36m                    ▄                                                         '
    echo -e $'\e[0;36m                   ▟█▙         \e[1;31m....             \e[35m...                           '
    echo -e $'\e[0;36m                  ▟███▙    \e[1;31m.xH888888Hx.      \e[35mxH88"`~ .x8X         \e[34m.xHL        '
    echo -e $'\e[0;36m                 ▟█████▙ \e[1;31m.H8888888888888:  \e[35m:8888   .f"8888Hf   \e[34m.-`8888hxxx~   '
    echo -e $'\e[0;36m                ▟███████▙\e[1;31m888*"""?""*88888X\e[35m:8888>  X8L  ^""` \e[34m.H8X  `%888*"     '
    echo -e $'\e[0;36m               ▂▔▀▜█████\e[1;31;46m\'\e[49mf     d8x.   ^%88X\e[35m8888  X888h      \e[34m888X     ..x..    '
    echo -e $'\e[0;36m              ▟██▅▂▝▜███\e[1;31;46m\'>\e[0;36;49m▙   \e[1;31m<88888X   \'88\e[35m8888  !88888.   \e[34m\'8888k .x8888888x  '
    echo -e $'\e[0;36m             ▟███████████\e[1;31;46m`:\e[49m..:`888888>    8>\e[35m888   %88888    \e[34m?8888X    "88888X '
    echo -e $'\e[0;36m            ▟███████████████▙   \e[1;31m`"*88     X\e[35m8888 \'> `8888>    \e[34m?8888X    \'88888>'
    echo -e $'\e[0;36m           ▟███████████████\e[1;31;46m.x\e[49mHHhx.."      !\e[35m8888L %  ?888  \e[34mH\e[35m!\e[34mH %8888     `8888>'
    echo -e $'\e[0;36m          ▟███████████████\e[1;31;46mX888\e[49m88888hx. ..! \e[35m`8888  `-*""  \e[34m\'\e[35m/\e[34m88> 888"      8888 '
    echo -e $'\e[0;36m         ▟█████████▛▀▀▜██\e[1;31;46m!\e[0;36m███\e[1;31;46m"*\e[49m888888888"    \e[35m"888.      :"\e[34m"8` .8" ..     88*  '
    echo -e $'\e[0;36m        ▟████████▛      ▜███████\e[1;31m^"***"`        \e[35m`""***~"`     \e[34m`  x8888h. d*"   '
    echo -e $"\e[0;36m       ▟█████████        ████████▙\e[0m                             \e[1;34m!\"\"*888%~      "
    echo -e $"\e[0;36m      ▟██████████        █████▆▅▄▃▂\e[0m                            \e[1;34m!   \`\"  .      "
    echo -e $'\e[0;36m     ▟██████████▛        ▜█████████▙                           \e[1;34m\'-....:~       '
    echo -e $'\e[0;36m    ▟██████▀▀▀              ▀▀██████▙                                         '
    echo -e $'\e[0;36m   ▟███▀▘                       ▝▀███▙                                        '
    echo -e $'\e[0;36m  ▟▛▀                               ▀▜▙                                       '
    echo -e $'\e[0m                                                                             '
}

setvar ()
{
    # CPU
    cpu="$(grep model\ name /proc/cpuinfo | head -1 | awk '{print $6" "$9}')"
    cpulen="${#cpu}"
    # Kernel
    kernel="$(uname -r)"
    kernellen="${#kernel}"
    # Memory
    mem="$(free --mega | awk '/^Mem/{print $3"MB/"$2"MB"}')"
    memlen="${#mem}"
    # OS
    [[ -e /etc/os-release ]] &&                 \
        eval $(grep "^NAME" /etc/os-release) && \
        os="$NAME" &&                           \
        unset NAME
    oslen="${#os}"
}

cleanup ()
{
    unset cpu
    unset cpulen
    unset kernel
    unset kernellen
    unset mem
    unset memlen
    unset os
    unset oslen
}

fetch ()
{
    printf \\33[7A
    printf \\33[40C
    echo -n "OS:"
    printf \\33[19C\\33["$oslen"D
    echo "$os"
    printf \\33[40C
    echo -n "KNL:"
    printf \\33[18C\\33["$kernellen"D
    echo "$kernel"
    printf \\33[40C
    echo -n "CPU:"
    printf \\33[18C\\33["$cpulen"D
    echo "$cpu"
    printf \\33[40C
    echo -n "MEM:"
    printf \\33[18C\\33["$memlen"D
    echo "$mem"
    printf \\33[40C
    echo -n "COL:"
    printf \\33[2C
    echo -e "\e[40m  \e[41m  \e[42m  \e[43m  \e[44m  \e[45m  \e[46m  \e[47m  \e[0m"
    printf \\33[46C
    echo -e "\e[100m  \e[101m  \e[102m  \e[103m  \e[104m  \e[105m  \e[106m  \e[107m  \e[0m"
    printf \\33[1B
}

main
