#!/usr/bin/bash

# # # # #
# Main  #
# # # # #

main ()
{
    [[ "$(tty)" == "/dev/tty6" ]] && return
    mountPlexMedia
    initVPN
    initGUI
}

# # # # # # # # # # # # # #
# FUNCTION IMPLEMENTATION #
# # # # # # # # # # # # # #

initGUI ()
{
    [[ "$(tty)" == "/dev/tty1" ]] &&                \
        exec startx
    [[ "$(tty)" == "/dev/tty2" ]] &&                \
        exec dvtm
}

initVPN ()
{
    OldIP="$(curl ip.me 2>/dev/null)"
    
    pgrep openvpn &>/dev/null &&                        \
        printpretty 0 "VPN CONNECTED"                   \
            "VPN IP Address: $OldIP" &&                 \
        return ||                                       \
        yes | doas surfshark-vpn attack &>/dev/null &&  \
        NewIP="$(curl ip.me 2>/dev/null)" &&            \
        printpretty 0 "VPN CONNECTED"                   \
            "Old IP Address: $OldIP"                    \
            "VPN IP Address: $NewIP" &&                 \
        return ||                                       \
        printpretty 2 "VPN RETRYING" &&                 \
        doas surfshark-vpn down &>/dev/null &&          \
        yes | doas surfshark-vpn attack &>/dev/null &&  \
        NewIP="$(curl ip.me 2>/dev/null)" &&            \
        printpretty 0 "VPN CONNECTED"                   \
            "Old IP Address: $OldIP"                    \
            "VPN IP Address: $NewIP" ||                 \
        printpretty 1 "VPN NOT CONNECTED" "IP Address: $OldIP"
}

mountPlexMedia ()
{
    [[ -e "$HOME/PlexMedia/Movies" ]] &&                    \
        printpretty 0 "PLEXMEDIA MOUNTED" &&                \
        return ||                                           \
        sshfs cs@192.168.1.110:Media/ $HOME/PlexMedia/ &&   \
        printpretty 0 "PLEXMEDIA MOUNTED" ||                \
        printpretty 1 "PLEXMEDIA NOT MOUNTED"
}

printpretty ()
{
    [[ -z "$2" ]] && exit 1

    case $1 in
        0)
            printf "\n\e[1m [\e[32m  %s  \e[0m\e[1m] \e[0m\n\n" "$2"
            [[ -z "$3" ]] || printf "\e[33;1m  INFO:\n\e[0m"
            for i in "$@"; do
                [[ "$i" == "$1" || "$i" == "$2" ]] || printf "  - %s\n" "$i"
            done
            [[ -z "$3" ]] || printf "\n"
            ;;
        1)
            printf "\n\e[1m [\e[31m  %s  \e[0m\e[1m] \e[0m\n\n" "$2"
            ;;
        2)
            printf "\n\e[1m [\e[33m  %s  \e[0m\e[1m] \e[0m\n\n" "$2"
            ;;
        *)
            exit ;;
    esac
} 

main
